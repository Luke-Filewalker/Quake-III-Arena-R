#version 460
#extension GL_NV_ray_tracing : require
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : enable
#include "rt_defines.glsl"
#include "rt_texture.glsl"
#include "rt_vattributes.glsl"
layout(location = PAYLOAD_SHADOW) rayPayloadInNV ShadowRayPayload rp;
hitAttributeNV vec2 hitAttribute;

void main()
{
    //if (alphaTestFails(attribs))
	//	IgnoreHit();
    RayPayload rpb;
    rpb.barycentric = hitAttribute;
    rpb.instanceID = gl_InstanceID;
    rpb.primitiveID = gl_PrimitiveID;
    rpb.hit_distance = gl_RayTmaxNV;
    //rpb.modelmat = gl_ObjectToWorldNV;

    if(is_see_through(rpb)) {
        HitPoint hp = getHitPoint(rpb);
        //if(all(equal(global_texture(hp.tex0 & TEX0_IDX_MASK, hp.uv0).xyz, vec3(0)))) ignoreIntersectionNV();
        // if(global_texture(hp.tex0 & TEX0_IDX_MASK, hp.uv0).x < 0.1 &&
        // global_texture(hp.tex0 & TEX0_IDX_MASK, hp.uv0).y < 0.1 &&
        // global_texture(hp.tex0 & TEX0_IDX_MASK, hp.uv0).z < 0.1) ignoreIntersectionNV();
         
        if(global_texture(hp.tex0 & TEX0_IDX_MASK, hp.uv0).w < 0.5) ignoreIntersectionNV();
    }
    
}